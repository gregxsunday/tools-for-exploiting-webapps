from flask import Blueprint, request, render_template, flash, g, session, redirect, url_for, \
                  abort, jsonify

import sys
from os import path, listdir
current_dir = path.dirname(__file__)
sys.path.insert(0, path.join(current_dir,'../../../recon/autorecon/'))

from modules.subdomains import subdomains
import re
from urllib.parse import urlparse
import validators
from multiprocessing import Process

mod = Blueprint('autorecon', __name__)

def list_existing_scan_folders():
  reports_dir = path.realpath(path.join(current_dir, '../static/reports/'))
  all_directories = listdir(reports_dir)


@mod.route('/autorecon/')
def index():
  return (render_template('autorecon/index.html'))

@mod.route('/autorecon/scan', methods=['POST'])
def start_scan():

  try:
    domain = request.form['domain']
    name = request.form['name']
  except IndexError:
    return 'Invalid parameters', 403
  if not validators.domain(domain) or not re.match(r'^[a-zA-Z0-9]+$', name):
    return 'Invalid domain', 403
  
  reports_dir = path.realpath(path.join(current_dir, '../static/reports/'))
  if name in listdir(reports_dir):
    return 'Name already taken', 403

  output_directory = path.realpath(path.join(current_dir, '../static/reports/', name))
  Process(target=subdomains, args=[[domain], output_directory]).start()
  return render_template('autorecon/index.html', alert='The scan has started')


@mod.route('/autorecon/results', methods=['GET'])
def show_results():
  reports_dir = path.realpath(path.join(current_dir, '../static/reports/'))
  all_directories = listdir(reports_dir)
  finished_scans = []
  for directory in all_directories:
    aquatone_report = path.join(reports_dir, directory, 'aquatone.d/aquatone_report.html')
    if path.isfile(aquatone_report):
      finished_scans.append(directory)
  return render_template('autorecon/results.html', scans=finished_scans)
