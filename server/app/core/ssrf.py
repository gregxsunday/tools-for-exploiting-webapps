from flask import Blueprint, request, render_template, flash, g, session, redirect, url_for, abort, jsonify

import sys
from os import path, listdir
current_dir = path.dirname(__file__)
sys.path.insert(0, path.join(current_dir,'../../../SSRF/listener/'))

from multiprocessing import Process

mod = Blueprint('ssrf', __name__)

from sqlalchemy import orm
from sqlalchemy.ext.declarative import declarative_base
import sqlalchemy as sa

from datetime import datetime

base = declarative_base()
db_uri = path.join(current_dir, '../../../SSRF/listener/listeners.sqlite')
db_uri = path.abspath(db_uri)
print(db_uri)
engine = sa.create_engine(f"sqlite:///{db_uri}")
base.metadata.bind = engine
session = orm.scoped_session(orm.sessionmaker())(bind=engine)

# after this:
# base == db.Model
# session == db.session
# other db.* values are in sa.*
# ie: old: db.Column(db.Integer,db.ForeignKey('s.id'))
#     new: sa.Column(sa.Integer,sa.ForeignKey('s.id'))
# except relationship, and backref, those are in orm
# ie: orm.relationship, orm.backref
# so to define a simple model

class Target(base):
    __tablename__ = 'target'
    id = sa.Column(sa.Integer, primary_key=True)
    name = sa.Column(sa.String(80), nullable=False, unique=True)
    domain = sa.Column(sa.String(80), nullable=True)

    def __repr__(self):
        return self.name

class Fire(base):
    __tablename__ = 'fire'
    id = sa.Column(sa.Integer, primary_key=True)
    payload = sa.Column(sa.Text, nullable=False)
    headers = sa.Column(sa.Text, nullable=True)
    date = sa.Column(sa.DateTime, nullable=False, default=datetime.utcnow)
    dns_fire = sa.Column(sa.Boolean, nullable=True)

    target_id = sa.Column(sa.Integer, sa.ForeignKey('target.id'), nullable=False)
    target = orm.relationship('Target', backref=orm.backref('target', lazy=True))


@mod.route('/ssrf/targets/')
def show_targets():
    targets = session.query(Target).all()
    print(targets)
    return (render_template('ssrf/targets.html', targets=targets))

@mod.route('/ssrf/fires/')
def all_fires():
    fires = session.query(Fire).all()
    return (render_template('ssrf/fires.html', fires=fires))

@mod.route('/ssrf/fires/<target>')
def show_fires(target):
    return (render_template('ssrf/fires.html'))